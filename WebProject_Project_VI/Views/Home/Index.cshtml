@model List<Post_Model>
@{
    ViewData["Title"] = "Home Page";
}

<!-- Include Icons -->
<script src="https://use.fontawesome.com/fe459689b4.js"></script>


<!-- Page Title / Welcome Message -->
<div class="text-center">
    <h1 class="display-4">Welcome To The Site</h1>


    <!-- Add the "New Post" button here -->
    <a asp-action="NewPost" class="dropbtn">New Post</a>

    <!-- Dropdown for selecting filter option -->
    <div class="dropdown">
        <button class="dropbtn">Filter</button>
        <div class="dropdown-content">
            <a asp-action="Index" asp-route-filter="date">Sort by Date</a>
            <a asp-action="Index" asp-route-filter="views">Sort by Views</a>
            <a asp-action="Index" asp-route-filter="likes">Sort by Likes</a>
            <a asp-action="Index" asp-route-filter="dislikes">Sort by Dislikes</a>
        </div>
    </div>
</div>


<!-- Loop through the list of posts -->
@foreach (var post in Model)
{
    <!-- Create an accordian item -->
    <div class="accordion-item">
        <div class="accordion-header collapsed" onclick="handleClick('@post.PostId');">
            <div class="header-content">
                <div class="left-content">
                    <!-- Put the Authors Name, Post Title and Date of Publication in accordian header -->
                    @($"{post.Author} - {post.Title} - {post.Date}")
                </div>
                <div class="right-content">
                    <!-- Put the Likes, Dislike and Views icons and number in accordian header -->
                    <span class="thumbs-up" onclick="incrementLikes('@post.PostId')"><i class="fa fa-thumbs-up"></i> <span id="likes@post.PostId">@post.Number_Of_Likes</span></span>
                    <span class="thumbs-down" onclick="incrementDislikes('@post.PostId')"><i class="fa fa-thumbs-down"></i> <span id="dislikes@post.PostId">@post.Number_Of_DisLikes</span></span>
                    <span class="views" onclick="incrementViews('@post.PostId')"><i class="fa fa-eye"></i> <span id="views@post.PostId">@post.Number_Of_Visits</span></span>
                    @if (post.Author == ViewBag.UserName) 
                    {
                        <span class="edit" onclick="editPost('@post.PostId')"><i class="fa fa-pencil"></i> </span>
                        <span class="delete" onclick="deletePost('@post.PostId')"><i class="fa fa-trash"></i> </span>
                    }
                </div>
            </div>
        </div>
        <div id="@post.PostId" class="accordion-body">
            <!-- Put the Content of the post in the accordian body -->
            <strong>@post.Content</strong>
        </div>
   </div>
}
<script>
    async function incrementLikes(postId) {
        try {
            const result = await $.ajax({
                url: '@Url.Action("IncrementLikes", "Home")',
                type: 'POST',
                data: { postId: postId },
            });

            // Update the like count on the UI
            $('#likes' + postId).text(result.Number_Of_Likes);
        } catch (error) {
            console.error('Failed to increment likes.', error);
        }
    }

    async function incrementDislikes(postId) {
        try {
            const result = await $.ajax({
                url: '@Url.Action("IncrementDislikes", "Home")',
                type: 'POST',
                data: { postId: postId },
            });

            // Update the dislike count on the UI
            $('#dislikes' + postId).text(result.Number_Of_DisLikes);
        } catch (error) {
            console.error('Failed to increment dislikes.', error);
        }
    }

    async function incrementViews(postId) {
        try {
            const result = await $.ajax({
                url: '@Url.Action("IncrementViews", "Home")',
                type: 'POST',
                data: { postId: postId },
            });

            // Update the view count on the UI
            $('#views' + postId).text(result.Number_Of_Visits);
        } catch (error) {
            console.error('Failed to increment views.', error);
        }
    }

    async function deletePost(postId) {
        try {
            const result = await $.ajax({
                url: '@Url.Action("DeletePost", "Home")',
                type: 'DELETE',
                data: { postId: postId },
            });

            if (result.success) {
                // Reload the page if removed successfully
                location.reload();
            } else {
                alert('Error deleting the post.');
            }
        } catch (error) {
            console.error('Failed to delete post.', error);
        }
    }

    function editPost(postId) {
        window.location.href = '@Url.Action("EditPost", "Home")' + '?postId=' + postId;
    }

    async function handleClick(postId) {
        await toggleAccordion(postId);
        await incrementViews(postId);
    }
</script>


<script src="~/js/site.js"></script>